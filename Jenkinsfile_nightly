#!groovy

properties([
        pipelineTriggers([cron('00 21 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'URL_TO_TEST', defaultValue: 'https://gateway-ccd.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
                string(name: 'IDAM_URL', defaultValue: 'https://idam-web-public.aat.platform.hmcts.net', description: 'The IDAM API Url to create and delete users from'),
                string(name: 'CCD_URL', defaultValue: 'https://www-ccd.aat.platform.hmcts.net', description: 'The CCD Url'),
                //string(name: 'BaseURL', defaultValue: 'https://ccd-api-gateway-web-aat.service.core-compute-aat.internal', description: 'The CCD Case Create Url'),
                //string(name: 'CCD_GATEWAY_URL', defaultValue: 'https://gateway-ccd.aat.platform.hmcts.net', description: 'The CCD Gateway Url')
        ])
])



@Library("Infrastructure") 


def product = "ccd"
def component = "case-worker"

withNightlyPipeline("java", product, component) {
    env.TEST_URL = 'https://gateway-ccd.aat.platform.hmcts.net'
    env.BaseURL = 'https://gateway-ccd.aat.platform.hmcts.net'
    env.IDAM_URL = 'https://idam-web-public.aat.platform.hmcts.net'
    env.CCD_URL = 'https://www-ccd.aat.platform.hmcts.net'

    enablePerformanceTest()

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    //enableSlackNotifications('#performance-testing')

}
